program example(input, ouput);
    const PI = 3.14159;
       YES = tRuE;
       NEGATIVE_PI = -PI;
       START_NUM = -4;
       END_NUM = -START_NUM;
       TEXT = 'I saw this in an example so I copied it.';

    type 
    VERTIX = record 
     	data : array [1 .. 3] of REAL;
     	X , Y : RECORD 
     		VALUE : REAL;
     	end;
    end;
    Polygon = record
        vertices : array [START_NUM .. END_NUM] of Vertix;
    end;
    int = Integer;

    var polygons : array [1 .. 2] of POLYGON;
    x, y : Integer;
    I : InTegeR;
    boo : char;
    things : array[START_NUM .. END_NUM] of integer;

    function gcd(a : integer; b : integer) : int; forward;

    procedure swap(a, b : Integer);
         var p, q, r, s, t, u, v, w, x, y, z : integer;
         tmp : Integer;
        procedure foo();
            procedure bar();
                procedure barf();
                begin
                end;
            begin
            end;
        begin
        end;
    begin
        tmp := a;
        a := b;
        b := tmp
    end;

    function gcd;
    begin
        if b = 1 then gcd := a
        else gcd := gcd(b, a mod b)
    end;
begin

   polygons[2].vertices[3].data[3] := 12;
     polygons[2].vertices[2].X.VALUE := 34;
    polygons[1].vertices[0].Y.VALUE := 4;
    polygons[2].vertices[3].data[3] := 12;
    polygons[1].vertices[START_NUM].data[1] := 1;   
    FoR I := 10 downto 2 do
    begin
		writechar ( boo )
    end;

    wHiLe I < 10 do
    begin
		I := I + 1
    end;

    polygons     [    2     ] .   vertices [  1 ].data [ 1 ] := PI;
	if y > x then
        swap(x, y);
    swap(x, y);
    swap(x, y)
end.
